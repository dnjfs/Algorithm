//백준 2293 동전 1	

#include "iostream"

using namespace std;

int main()
{
	int n, k, c, m[10001] = {1};
	/*
	n: 동전의 종류
	k: 동전의 조합으로 만들 수
	c: 동전의 가치
	m[i]: 동전의 조합으로 i를 만드는 경우의 수
	*/
	cin >>n >>k;

	for(int i = 0; i < n; i++) //동전의 종류는 n개
	{
		cin >>c;
		for(int j = 1; j <= k; j++) //입력받은 동전으로 1부터 k까지 경우의 수 누적
			if(j >= c)
				m[j] += m[j-c]; //(j-c)에서 c를 조합하여 j가 되는 경우의 수 추가
	}

	cout <<m[k];
}




/*
n가지 종류의 동전을 조합하여 k를 만드는 경우의 수를 구하는 문제입니다.
단순히 2차원 배열을 이용한 DP로 해결할 수 있을 거라 생각했지만
메모리 제한이 4MB밖에 되지 않아 int형 10000x100 크기의 배열은 메모리 초과를 받습니다.
1차원 배열을 이용하여 동전의 가치를 입력받으면 현재까지 입력받은 동전들로 조합할 수 있는 경우의 수를 누적해가는 방식으로 해결하였습니다.
*/