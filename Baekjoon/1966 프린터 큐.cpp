//백준 1966 프린터 큐

#include "iostream"
#include "queue"

using namespace std;

int main()
{
	int T; //테스트 케이스
	cin >>T;
	while (T--)
	{
		queue<int> Q;
		int N, M, arr[100], cnt = 0; //문서의 수, 인쇄 순서를 알고 싶은 문서의 위치, 문서의 중요도, M번째 문서의 출력 순서
		cin >>N >>M;

		for (int i = 0; i < N; i++) //문서의 중요도 입력
		{
			cin >>arr[i];
			Q.push(arr[i]);
			if (i == M) //M번째로 입력된 문서
				Q.push(0); //중요도가 같은 문서가 있을 수 있으므로 구분을 위해 0을 추가
		}

		sort(arr, arr+N); //문서를 중요도 순으로 출력하기 위해 정렬

		while (true)
		{
			if (Q.front() == arr[N-cnt-1]) //큐의 현재 상태에서 중요도가 가장 높은 경우
			{
				Q.pop(); //인쇄 후
				cnt++; //출력 순서 증가
				if (!Q.front()) //M번째로 입력된 문서라면
					break; //출력 순서를 찾았으니 반복문 종료
			}
			else //지금 출력할 상황이 아니라면
			{
				Q.push(Q.front()); //큐의 맨 마지막으로 보냄
				Q.pop();
			}
		}

		cout <<cnt <<endl;
	}
}



/*
프린터 큐에 중요도가 있는 문서를 입력받았을 때, M번째로 입력받은 문서가 인쇄되는 순서를 출력하는 문제입니다.
큐와 배열에 문서의 중요도를 순서대로 넣어주고, 배열을 오름차순으로 정렬하여 높은 중요도를 가진 문서부터 인쇄되게 합니다.
큐에 문서의 중요도를 넣을 때 다른 문서와 중복될 수 있으므로 M번째 문서라는 표시로 큐에 0을 따로 넣어줘서
큐에서 문서가 출력되고 0이 나타난다면 M번째 문서라는 걸 알 수 있게 만들었습니다.
큐에 있는 문서를 출력할 상황이 아니라면 큐의 맨 마지막으로 보내어 순서가 섞이지 않습니다.
*/