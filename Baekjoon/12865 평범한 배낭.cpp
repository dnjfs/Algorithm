//백준 12865 평범한 배낭
//solved.ac CLASS 4

#include "iostream"

using namespace std;

int a[100001]; //a[i]: 최대 i만큼의 무게를 넣을 수 있을 때 배낭에 넣을 수 있는 물건들의 가치합
int main()
{
	int N, K, W, V; //물품의 수, 배낭이 버틸 수 있는 무게, 물건의 무게, 물건의 가치
	cin >>N >>K;

	for(int i = 0; i < N; i++)
	{
		cin >>W >>V;
		
		for(int j = K; j > 0; j--) //j가 1부터 시작하면 똑같은 물건을 여러 번 넣어버림
			if(W <= j) //물건을 배낭에 넣을 수 있는 경우
				a[j] = max(a[j], a[j-W]+V); //물건을 넣거나 넣지 않는 경우 중 가치가 더 큰 걸 저장
	}

	cout <<a[K];
}




/*
최대 K만큼의 무게만을 넣을 수 있는 배낭에 가치의 합이 최대가 되도록 물건을 넣는 문제입니다.
DP를 이용하여 배낭에 최대 j만큼의 무게를 넣을 수 있을 때,
(j-W)의 무게에서 물건을 추가하여 배낭에 들어있는 물건들의 가치가 더 높아질 경우 물건을 넣습니다.
시간복잡도는 O(N*K)입니다.
*/