//백준 15988 1, 2, 3 더하기 3

#include "iostream"

using namespace std;

long long int dp[1000001] = {0, 1, 2, 4}; //max까지 합으로 나타낸 방법의 수를 저장한 배열
int main()
{
	int T, max = 3; //테스트 케이스 수, 현재까지 합으로 나타낸 수 중 최댓값
	cin >>T;
	while(T--)
	{
		int n; //1, 2, 3의 합으로 나타낼 수
		cin >>n;

		if(max < n) //계산 필요
		{
			for(int i = max+1; i <= n; i++)
				dp[i] = (dp[i-1]+dp[i-2]+dp[i-3]) % 1000000009; //계산한 값을 1000000009로 나눈 나머지 값으로 저장
			max = n; //최댓값 갱신
		}

		cout <<dp[n] <<endl;
	}
}




/*
양의 정수 n이 주어질 때 1, 2, 3의 합으로 나타내는 방법의 수를 출력하는 문제입니다.
전형적인 DP 문제라 문제를 보자마자 앞서 계산한 값을 저장할 배열을 만들었습니다.
n이 주어지면 (n-1)+1, (n-2)+2, (n-3)+3으로 나타낼 수 있으므로 배열에 앞서 계산한 세 값을 합하여 저장하였습니다.
이때 나머지 연산을 해주지 않으면 추후 오버플로우가 일어나서 비정상적인 값이 저장될 수 있습니다.
테스트 케이스가 여러 개이므로 시간을 줄이기 위해 합으로 나타낸 수 중 가장 큰 값을 미리 저장하여 중복 계산을 피했습니다.
*/