//백준 1912 연속합

#include "iostream"

using namespace std;

int sum[100001];
int main()
{
	int n, m = -1000; //수열의 크기, 가장 큰 연속합
	cin >>n;
	for(int i = 1; i <= n; i++)
	{
		cin >>sum[i];

		if(sum[i]+sum[i-1] > 0 && sum[i-1] > 0) //입력받은 수를 지금까지의 연속합에 더했을 때 연속합이 더 커질 수 있는 경우
			sum[i] += sum[i-1];
		//더 커질 수 없는 경우엔 연속합이 i-1에서 끝남

		m = max(m, sum[i]); //가장 큰 연속합 저장
	}

	cout <<m;
}




/*
n개의 정수로 이루어진 임의의 수열을 입력받았을 때, 연속된 몇 개의 수를 선택하여 구할 수 있는 합 중 가장 큰 합을 구하는 문제입니다.
만약 입력받은 수를 직전까지의 연속합에 더했을 때 0보다 작아져버리면
다음 수를 입력받아 방금 저장한 연속합에 더한 것보다 더하지 않는 것이 더 크므로 이런 경우엔 아무것도 하지 않고 반복문을 진행합니다.
비슷한 경우로 직전에 입력받은 수가 너무 작아 직전의 연속합이 0보다 작으면 현재 입력받은 수만 그대로 연속합에 포함시키는 것이 더 값이 커집니다.
*/