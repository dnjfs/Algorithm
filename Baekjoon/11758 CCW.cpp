//백준 11758 CCW

#include "iostream"

using namespace std;

int main()
{
	int P[3][2]; //점 3개
	for(int i = 0; i < 6; i++)
		cin >>P[i/2][i%2];

	int S = (P[1][0]-P[0][0])*(P[2][1]-P[0][1]) - (P[1][1]-P[0][1])*(P[2][0]-P[0][0]); //P3P1, P1P2 외적
	S>0 ? cout <<1 : (S<0 ? cout <<-1 : cout <<0);
}




/*
2차원 평면 위에 있는 점 P1, P2, P3를 순서대로 이었을 때의 방향을 출력하는 문제입니다.
방향은 반시계 방향, 시계 방향, 일직선이 있습니다.
외적을 하여 나온 결과를 통하여 방향을 알 수 있습니다.
P1P2 벡터와 P1P3 벡터의 외적은 -P1P3 벡터와 P1P2 벡터, 즉 P3P1 벡터와 P1P2의 외적과 같습니다.
또한 외적의 결과는 평행사변형의 넓이의 절반(1/2ab sinθ)과 같으므로,
양수라면 두 선분의 각이 180도 이하로 반시계 방향이고 음수라면 180도 이상으로 시계 방향입니다.
참고: https://snowfleur.tistory.com/98
*/
